---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: redis-password-external
spec:
  refreshInterval: 30m  # Refresh every 30 minutes
  secretStoreRef:
    name: aws-secrets-manager
    kind: SecretStore
  target:
    name: redis-sentinel-password  # This creates the secret your HelmRelease expects
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        password: "{{ .password }}"  # Maps AWS secret value to 'password' key
  data:
  - secretKey: password  # The key in the target secret
    remoteRef:
      key: "redis/credentials"  # The secret name in AWS Secrets Manager
      property: password        # The property within that secret

---
# Alternative: If your AWS secret contains JSON
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: redis-password-json-external
spec:
  refreshInterval: 30m
  secretStoreRef:
    name: aws-secrets-manager
    kind: SecretStore
  target:
    name: redis-sentinel-password-json
    creationPolicy: Owner
    template:
      type: Opaque
      data:
        password: "{{ .password | toString }}"
        username: "{{ .username | toString }}"
  dataFrom:
  - extract:
      key: "redis/dev/credentials"  # JSON secret in AWS Secrets Manager
      # Expected JSON format: {"username": "redis", "password": "secure-password"} 